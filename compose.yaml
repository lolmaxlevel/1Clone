name: 1clone
services:
  server:
    environment:
      - JAVA_HOME=/opt/java/openjdk
      - JAVA_VERSION=jdk-17.0.12+7
      - LANG=en_US.UTF-8
      - LANGUAGE=en_US:en
      - LC_ALL=en_US.UTF-8
      - PATH=/opt/java/openjdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - SPRING.DATASOURCE.USERNAME=postgres
      - SPRING.DATASOURCE.PASSWORD=2456
      - SPRING.DATASOURCE.URL=jdbc:postgresql://db:5432/postgres
      - ALLOWED_IP_ADDRESSES=192.168.3.8,127.0.0.1,192.168.0.106,172.18.0.1,172.18.0.5,localhost,127.0.0.1,localhost:80,localhost:8181,192.168.3.8:82
#    image: ghcr.io/lolmaxlevel/1clone_backend:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    image: ghcr.io/lolmaxlevel/1clone_frontend:latest
    ports:
      - 8181:80
    depends_on:
      - server
    environment:
      # should be 192.168.3.8/api
      - MY_APP_API_URL=192.168.3.8/api
    networks:
      - app-network

  db:
    image: postgres
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=2456
      - POSTGRES_USER=postgres
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  nginx:
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - server
      - frontend
    command: [ nginx-debug, '-g', 'daemon off;' ]
    networks:
      - app-network
networks:
  app-network:

volumes:
  db-data:
