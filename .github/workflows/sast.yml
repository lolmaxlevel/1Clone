name: SAST Security Analysis

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  sast-analysis:
    name: Static Application Security Testing
    runs-on: ubuntu-latest

    permissions:
      contents: read
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Cache OWASP NVD data
        uses: actions/cache@v3
        with:
          path: ~/owasp-data
          key: ${{ runner.os }}-owasp-data-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-owasp-data-

      - name: Run Build and spotbugs
        run: mvn clean verify -DskipTests
        continue-on-error: true

      - name: Run OWASP Dependency Check
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
        run: |
          echo "üîë Using NVD API key for complete vulnerability analysis"
          mvn org.owasp:dependency-check-maven:check \
            -DdataDirectory=$HOME/owasp-data \
            -DautoUpdate=true \
            -DnvdApiKey=$NVD_API_KEY \
            -DnvdApiAnalyzerEnabled=true \
            -DcentralAnalyzerEnabled=true \
            -DnexusAnalyzerEnabled=false \
            -DretireJsAnalyzerEnabled=false \
            -DhostileAnalyzerEnabled=false \
            -DfailBuildOnCVSS=7 \
            -Dformat=XML \
            -DprettyPrint=true
        continue-on-error: true

      - name: Display OWASP Dependency Check Results
        if: always()
        run: |
          echo ""
          echo "## üõ°Ô∏è OWASP Dependency Check Results"
          echo "===================================="
          
          if [ -f target/dependency-check-report.json ]; then
            # –ê–Ω–∞–ª–∏–∑ JSON –æ—Ç—á–µ—Ç–∞
            VULN_COUNT=$(jq '[.dependencies[]?.vulnerabilities[]?] | length' target/dependency-check-report.json 2>/dev/null || echo "0")
            DEP_COUNT=$(jq '.dependencies | length' target/dependency-check-report.json 2>/dev/null || echo "0")
          
            echo "Dependencies analyzed: $DEP_COUNT"
            echo "Vulnerabilities found: $VULN_COUNT"
            echo ""
          
            if [ "$VULN_COUNT" -gt 0 ]; then
              echo "### Vulnerabilities by Severity:"
              jq -r '.dependencies[]?.vulnerabilities[]? | .severity' target/dependency-check-report.json 2>/dev/null | sort | uniq -c | while read count severity; do
                echo "- $severity: $count vulnerabilities"
              done
              echo ""
          
              echo "### High/Critical Vulnerabilities:"
              jq -r '.dependencies[] | select(.vulnerabilities[]?.severity == "HIGH" or .vulnerabilities[]?.severity == "CRITICAL") | "\(.fileName): \(.vulnerabilities[].name) (\(.vulnerabilities[].severity))"' target/dependency-check-report.json 2>/dev/null | head -10
          
              echo ""
              echo "### Affected Dependencies:"
              jq -r '.dependencies[] | select(.vulnerabilities | length > 0) | "\(.fileName) - \(.vulnerabilities | length) vulnerabilities"' target/dependency-check-report.json 2>/dev/null | head -10
            else
              echo "‚úÖ No vulnerabilities found in dependencies!"
            fi
          else
            echo "‚ö†Ô∏è OWASP report not found - analysis may have failed due to NVD API limitations"
            echo "   This is expected in CI environments without NVD API key"
            echo "   Consider running locally with NVD API key for complete analysis"
          fi

      - name: Fail if critical vulnerabilities found
        if: always()
        run: |
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —É—è–∑–≤–∏–º–æ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ—Ç—á–µ—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
          if [ -f target/dependency-check-report.json ]; then
            CRITICAL_COUNT=$(jq '[.dependencies[]?.vulnerabilities[]? | select(.severity == "CRITICAL")] | length' target/dependency-check-report.json 2>/dev/null || echo "0")
            if [ "$CRITICAL_COUNT" -gt 0 ]; then
              echo "üö® CRITICAL vulnerabilities found: $CRITICAL_COUNT"
              echo "Build failed due to critical security vulnerabilities!"
              exit 1
            fi
          else
            echo "‚ÑπÔ∏è No OWASP report generated - skipping critical vulnerability check"
          fi
